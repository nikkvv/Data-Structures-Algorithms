Basic Cases to consider for problems in linked lists :-
1) Check if node is head.
2) Check if node is final.
3) Check if node is NULL.
4) Check if list is empty.
5) Check if two nodes are adjacent.
6) Linked list with one node.
7) Linked list with 2 nodes.
8) Linked list with even/odd number of nodes.


Basic Problems :-

1. Introduction to Linked List
2. Linked List vs Array
3. Linked List Insertion
4. Linked List Deletion (Deleting a given key)
5. Linked List Deletion (Deleting a key at given position)
7. Find Length of a Linked List (Iterative and Recursive)
8. Search an element in a Linked List (Iterative and Recursive)
9. How to write C functions that modify head pointer of a Linked List?
11. Write a function to get Nth node in a Linked List
15. Write a function that counts the number of times a given int occurs in a Linked List
20. Given a linked list which is sorted, how will you insert in sorted way
28. Practice questions for Linked List and Recursion
29. Move last element to front of a given Linked List
33. Identical Linked Lists
65. Compare two strings represented as linked lists
75. Delete a Linked List node at a given position


Intermediate Problems :-

6. A Programmer’s approach of looking at Array vs. Linked List
12. Print the middle of a given linked list
13. Nth node from the end of a Linked List
14. Write a function to delete a Linked List
17. Detect loop in a linked list
19. Generic Linked List in C
21. Given only a pointer to a node to be deleted in a singly linked list, how do you delete it?
25. Remove duplicates from a sorted linked list
30. Intersection of two Sorted Linked Lists
31. Delete alternate nodes of a Linked List
32. Alternating split of a given Singly Linked List
40. Add two numbers represented by linked lists | Set 1
44. Rotate a Linked List
47. Sort a linked list of 0s, 1s and 2s
49. Delete N nodes after M nodes of a linked list
51. Merge a linked list into another linked list at alternate positions
52. Pairwise swap elements of a given linked list by changing links
58. Insertion Sort for Singly Linked List
63. Why Quick Sort preferred for Arrays and Merge Sort for Linked Lists?
68. Add 1 to a number represented as linked list
72. Check if a linked list of strings forms a palindrome
74. Delete last occurrence of an item from linked list


Advanced Problems :-

10. Swap nodes in a linked list without swapping data
16. Reverse a linked list
18. Merge two sorted linked lists
22. Function to check if a singly linked list is palindrome
23. Intersection point of two Linked Lists.
24. Recursive function to print reverse of a Linked List
26. Remove duplicates from an unsorted linked list
27. Pairwise swap elements of a given linked list
34. Merge Sort for Linked Lists
35. Reverse a Linked List in groups of given size
36. Reverse alternate K nodes in a Singly Linked List
37. Delete nodes which have a greater value on right side
38. Segregate even and odd nodes in a Linked List
39. Detect and Remove Loop in a Linked List
41. Delete a given node in Linked List under given constraints
42. Union and Intersection of two Linked Lists
43. Find a triplet from three linked lists with sum equal to a given number
45. Flattening a Linked List
46. Add two numbers represented by linked lists | Set 2
48. Flatten a multilevel linked list
50. QuickSort on Singly Linked List
53. Given a linked list of line segments, remove middle points
54. Construct a Maximum Sum Linked List out of two Sorted Linked Lists having some Common nodes
55. Can we reverse a linked list in less than O(n)?
56. Clone a linked list with next and random pointer | Set 1
57. Clone a linked list with next and random pointer | Set 2
59. Point to next higher value node in a linked list with an arbitrary pointer
60. Rearrange a given linked list in-place.
61. Sort a linked list that is sorted alternating ascending and descending orders?
62. Select a Random Node from a Singly Linked List
64. Merge two sorted linked lists such that merged list is in reverse order
66. Rearrange a linked list such that all even and odd positioned nodes are together
67. Rearrange a Linked List in Zig-Zag fashion
69. Point arbit pointer to greatest value right side node in a linked list
70. Merge two sorted linked lists such that merged list is in reverse order
71. Convert a given Binary Tree to Doubly Linked List | Set 4
73. Sort linked list which is already sorted on absolute values
